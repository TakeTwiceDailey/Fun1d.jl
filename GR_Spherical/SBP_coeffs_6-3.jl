###### Parameters for the 6-3 SBP Operator ######

# Obtained from arXiv:gr-qc/0512001

# I have chosen the D_{6-3} operator from this paper.
# In order to find the explicit numerical values of the coefficients
# for this operator and others along with the norms, follow the
# link and under Download on the arXiv page, click 'Other formats',
# and download the 'Source' format. Use a text editor to view the file,
# and you can read off the coefficients as directed
# in the appendix of the paper.

# Coefficents of the norm σij

const σ11 =  T(13649)/43200
const σ22 =  T(12013)/8640
const σ33 =  T(2711)/4320
const σ44 =  T(5359)/4320
const σ55 =  T(7877)/8640
const σ66 =  T(43801)/43200

# The norm is diagonal and symmetric, with the interior
# like the identity matrix.
# Form the 'left' and 'right' blocks of the matrix:

const σnl = T[σ11, σ22 ,σ33 ,σ44 ,σ55 ,σ66];
const σnr = σnl[end:-1:1];

# First derivative coefficents
# Defines the coefficents of the D_{6-3} operator qij

const q11 = T"-1.582533518939116418785258993332844897062"
const q21 = T"2.033426786468126253898161347360808173712"
const q31 = T"-0.1417052898146741610733887894481170575600"
const q41 = T"-0.4501096599735708523162117824920488989702"
const q51 = T"0.1042956382142412661862395105494407610836"
const q61 = T"0.03662604404499391209045870736276191879693"
const q71 = T"0."
const q81 = T"0."
const q91 = T"0."

const q12 = T"-0.4620701275035953590186631853846278325646"
const q22 = T"0."
const q32 = T"0.2873679417026202568532985205129449923126"
const q42 = T"0.2585974499280928196267362923074433487080"
const q52 = T"-0.06894808744606961472005221923058251153103"
const q62 = T"-0.01494717668104810274131940820517799692506"
const q72 = T"0."
const q82 = T"0."
const q92 = T"0."

const q13 = T"0.07134398748360337973038301686379010397038"
const q23 = T"-0.6366933020423417826592908754928085932593"
const q33 = T"0."
const q43 = T"0.6067199374180168986519150843189505198519"
const q53 = T"-0.02338660408468356531858175098561718651857"
const q63 = T"-0.01798401877459493040442547470431484404443"
const q73 = T"0."
const q83 = T"0."
const q93 = T"0."

const q14 = T"0.1146397975178068401430112823144985150596"
const q24 = T"-0.2898424301162697370942324201800071793273"
const q34 = T"-0.3069262456316931913128086944558079603132"
const q44 = T"0."
const q54 = T"0.5203848121857539166740071338174418292578"
const q64 = T"-0.05169127637022742348368508279860701098408"
const q74 = T"0.01343534241462959507370778130248180630715"
const q84 = T"0."
const q94 = T"0."

const q15 = T"-0.03614399304268576976452921364705641609825"
const q25 = T"0.1051508663818248421520867474440761344449"
const q35 = T"0.01609777419666805778308369351834662756172"
const q45 = T"-0.7080721616106272031118456849378369336023"
const q55 = T"0."
const q65 = T"0.7692160858661111736140494493705980473867"
const q75 = T"-0.1645296432652024882569506157166433921544"
const q85 = T"0.01828107147391138758410562396851593246160"
const q95 = T"0."

const q16 = T"-0.01141318406360863692889821914555232596651"
const q26 = T"0.02049729840293952857599941220163960606616"
const q36 = T"0.01113095018331244864875173213474522093204"
const q46 = T"0.06324365883611076515355091406993789453750"
const q56 = T"-0.6916640154753724474963890679085181638850"
const q66 = T"0."
const q76 = T"0.7397091390607520376247117645715851236273"
const q86 = T"-0.1479418278121504075249423529143170247255"
const q96 = T"0.01643798086801671194721581699047966941394"

# These coefficents are for the unobtimized 6-3 operator:

# const q11 = -21600.0/13649.0
# const q21 = 81763.0/40947.0
# const q31 = 131.0/27298.0
# const q41 = -9143.0/13649.0
# const q51 = 20539.0/81894.0
# const q61 = 0.
# const q71 = 0.
# const q81 = 0.
# const q91 = 0.
#
# const q12 = -81763.0/180195.0
# const q22 = 0.
# const q32 = 7357.0/36039.0
# const q42 = 30637.0/72078.0
# const q52 = -2328.0/12013.0
# const q62 = 6611.0/360390.0
# const q72 = 0.
# const q82 = 0.
# const q92 = 0.
#
# const q13 = -131.0/54220.0
# const q23 = -7357.0/16266.0
# const q33 = 0.
# const q43 = 645.0/2711.0
# const q53 = 11237.0/32532.0
# const q63 = -3487.0/27110.0
# const q73 = 0.
# const q83 = 0.
# const q93 = 0.
#
# const q14 = 9143.0/53590.0
# const q24 = -30637.0/64308.0
# const q34 =  -645.0/5359.0
# const q44 = 0.
# const q54 = 13733.0/32154.0
# const q64 = -67.0/4660.0
# const q74 = 72.0/5359.0
# const q84 = 0.
# const q94 = 0.
#
# const q15 = -20539.0/236310.0
# const q25 = 2328.0/7877.0
# const q35 = -11237.0/47262.0
# const q45 = -13733.0/23631.0
# const q55 = 0.
# const q65 = 89387.0/118155.0
# const q75 = -1296.0/7877.0
# const q85 = 144.0/7877.0
# const q95 = 0.
#
# const q16 = 0.
# const q26 = -6611.0/262806.0
# const q36 = 3487.0/43801.0
# const q46 = 1541.0/87602.0
# const q56 = -89387.0/131403.0
# const q66 = 0.
# const q76 = 32400.0/43801.0
# const q86 = -6480.0/43801.0
# const q96 = 720.0/43801.0

# The D_{6-3} operator is only different from a 6th order
# centered finite differencing operator at the left and right boundaries
# Form these 'left' and 'right' blocks:

const ql =  T[ q11 q21 q31 q41 q51 q61 q71 q81 q91 ;
               q12 q22 q32 q42 q52 q62 q72 q82 q92 ;
               q13 q23 q33 q43 q53 q63 q73 q83 q93 ;
               q14 q24 q34 q44 q54 q64 q74 q84 q94 ;
               q15 q25 q35 q45 q55 q65 q75 q85 q95 ;
               q16 q26 q36 q46 q56 q66 q76 q86 q96 ];

# Important to note that there is a minus sign difference on the right block

const qr = -ql[end:-1:1,end:-1:1];

# Now put all of these numbers into sparse arrays

# Define a sparse 7-diagonal 6th order centered finite differencing operator
Dc = spdiagm(-3=> -1*ones(T,n-3), -2=> 9*ones(T,n-2), -1=> -45*ones(T,n-1),
              1=> 45*ones(T,n-1),  2=>-9*ones(T,n-2),  3=>     ones(T,n-3))/60;
# Overwrite the left and right blocks
Dc[1:6,1:9] .= ql; Dc[n-5:n,n-8:n] .= qr;

# Define SBP differencing operator
const D = Dc/dr;

# Norm
# Form the full sparse norm matrix
vec = ones(T,n);
vec[1:6] .= σnl; vec[n-5:n] .= σnr;

const Σ = dr*spdiagm(vec);

# Inverse norm
# Form the full sparse inverse norm matrix
const Σi = dr*spdiagm(1 ./vec);

# Complete construction of the dissipation operator

const a11 = T"-3.1650670378782328375705179866656897941241116565316"
const a21 = T"9.4952011136346985127115539599970693823723349695948"
const a31 = T"-9.4952011136346985127115539599970693823723349695948"
const a41 = T"3.1650670378782328375705179866656897941241116565316"
const a51 = T"0.0"
const a61 = T"0.0"
const a71 = T"0.0"
const a81 = T"0.0"
const a91 = T"0.0"

const a12 = T"2.1576625322567218846249895946058436693581952884375"
const a22 = T"-7.1922084408557396154166319820194788978606509614584"
const a32 = T"8.6306501290268875384999583784233746774327811537501"
const a42 = T"-4.3153250645134437692499791892116873387163905768751"
const a52 = T"0.71922084408557396154166319820194788978606509614584"
const a62 = T"0.0"
const a72 = T"0.0"
const a82 = T"0.0"
const a92 = T"0.0"

const a13 = T"-4.7805237919586868314275175212098856510512725931391"
const a23 = T"19.122095167834747325710070084839542604205090372556"
const a33 = T"-30.276650682405016599040944300995942456658059756547"
const a43 = T"23.902618959793434157137587606049428255256362965695"
const a53 = T"-9.5610475839173736628550350424197713021025451862781"
const a63 = T"1.5935079306528956104758391737366285503504241977130"
const a73 = T"0.0"
const a83 = T"0.0"
const a93 = T"0.0"

const a14 = T"0.80612054487777570442246687814890837842881134540026"
const a24 = T"-4.8367232692666542265348012688934502705728680724016"
const a34 = T"12.091808173166635566337003172233625676432170181004"
const a44 = T"-16.122410897555514088449337562978167568576226908005"
const a54 = T"12.091808173166635566337003172233625676432170181004"
const a64 = T"-4.8367232692666542265348012688934502705728680724016"
const a74 = T"0.80612054487777570442246687814890837842881134540026"
const a84 = T"0.0"
const a94 = T"0.0"

const a15 = T"0.0"
const a25 = T"1.0968642884346832550463374381109559476958232829758"
const a35 = T"-6.5811857306080995302780246286657356861749396978545"
const a45 = T"16.452964326520248825695061571664339215437349244636"
const a55 = T"-21.937285768693665100926748762219118953916465659515"
const a65 = T"16.452964326520248825695061571664339215437349244636"
const a75 = T"-6.5811857306080995302780246286657356861749396978545"
const a85 = T"1.0968642884346832550463374381109559476958232829758"
const a95 = T"0.0"

const a16 = T"0.0"
const a26 = T"0.0"
const a36 = T"0.98627885208100271683294901942878016483641925983425"
const a46 = T"-5.9176731124860163009976941165726809890185155590055"
const a56 = T"14.794182781215040752494235291431702472546288897514"
const a66 = T"-19.725577041620054336658980388575603296728385196685"
const a76 = T"14.794182781215040752494235291431702472546288897514"
const a86 = T"-5.9176731124860163009976941165726809890185155590055"
const a96 = T"0.98627885208100271683294901942878016483641925983425"

const al =  T[ a11 a21 a31 a41 a51 a61 a71 a81 a91 ;
               a12 a22 a32 a42 a52 a62 a72 a82 a92 ;
               a13 a23 a33 a43 a53 a63 a73 a83 a93 ;
               a14 a24 a34 a44 a54 a64 a74 a84 a94 ;
               a15 a25 a35 a45 a55 a65 a75 a85 a95 ;
               a16 a26 a36 a46 a56 a66 a76 a86 a96 ];

const ar = al[end:-1:1,end:-1:1];

Ac = spdiagm(-3=>     ones(T,n-3), -2=> -6*ones(T,n-2), -1=> 15*ones(T,n-1),
              0=> -20*ones(T,n),
              1=>  15*ones(T,n-1),  2=> -6*ones(T,n-2),  3=>    ones(T,n-3));

Ac[1:6,1:9] .= al; Ac[n-5:n,n-8:n] .= ar;

const D4 = ε*Ac;


# Averaging operator


# Ac = spdiagm(-3=>  -3*ones(T,n-3), -2=> -2*ones(T,n-2), -1=> -1*ones(T,n-1),
#               1=>     ones(T,n-1),  2=>  2*ones(T,n-2),  3=>  3*ones(T,n-3));

# il =  T[ 0  1  2  3  4  5  6  7  8 ;
#         -1  0  1  2  3  4  5  6  7 ;
#         -2 -1  0  1  2  3  4  5  6 ;
#         -3 -2 -1  0  1  2  3  4  5 ;
#         -4 -3 -2 -1  0  1  2  3  4 ;
#         -5 -4 -3 -2 -1  0  1  2  3 ];

# ir = -il[end:-1:1,end:-1:1];

# Al = il.*ql; Ar = ir.*qr;

# Ac[1:6,1:9] .= Al; Ac[n-5:n,n-8:n] .= Ar;

# const A = copy(Ac)
